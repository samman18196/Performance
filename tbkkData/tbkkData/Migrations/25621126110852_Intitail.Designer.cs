// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tbkkData.Models;

namespace tbkkData.Migrations
{
    [DbContext(typeof(tbkkDataContext))]
    [Migration("25621126110852_Intitail")]
    partial class Intitail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("tbkkData.Model.Asset_Cock", b =>
                {
                    b.Property<int>("Asset_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetName");

                    b.Property<int?>("CompanyIDCompany_CockID");

                    b.Property<int>("Company_Cock");

                    b.Property<int?>("DepartmentIDDepartment_CockID");

                    b.Property<int>("Department_Cock");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<int>("Employee_Cock");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<DateTime>("InstallDate");

                    b.Property<double>("Price");

                    b.Property<string>("SerailNumber");

                    b.Property<string>("Status");

                    b.Property<int?>("SupplierIDSupplier_CockID");

                    b.Property<int>("Supplier_Cock");

                    b.Property<int>("Warranty");

                    b.HasKey("Asset_CockID");

                    b.HasIndex("CompanyIDCompany_CockID");

                    b.HasIndex("DepartmentIDDepartment_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.HasIndex("SupplierIDSupplier_CockID");

                    b.ToTable("Asset_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.CarType_Cock", b =>
                {
                    b.Property<int>("CarType_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CerNumber");

                    b.Property<string>("NameCar");

                    b.HasKey("CarType_CockID");

                    b.ToTable("CarType_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Company_Cock", b =>
                {
                    b.Property<int>("Company_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<string>("Status");

                    b.HasKey("Company_CockID");

                    b.ToTable("Company_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Department_Cock", b =>
                {
                    b.Property<int>("Department_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName");

                    b.Property<string>("Status");

                    b.HasKey("Department_CockID");

                    b.ToTable("Department_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.DetailOT_Cock", b =>
                {
                    b.Property<int>("DetailOT_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarNumber");

                    b.Property<int?>("CarTypeIDCarType_CockID");

                    b.Property<int>("CarType_Cock_CarTypeID");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<int>("Employee_Cock_EmpID");

                    b.Property<int?>("FoodSetIDFoodSet_CockID");

                    b.Property<int>("FoodSet_Cock_FoodSetID");

                    b.Property<double>("Hour");

                    b.Property<int?>("OTIDOT_CockID");

                    b.Property<int>("OT_Cock_OTID");

                    b.Property<int?>("PartIDPart_CockID");

                    b.Property<int>("Part_Cock_PaetID");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.HasKey("DetailOT_CockID");

                    b.HasIndex("CarTypeIDCarType_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.HasIndex("FoodSetIDFoodSet_CockID");

                    b.HasIndex("OTIDOT_CockID");

                    b.HasIndex("PartIDPart_CockID");

                    b.ToTable("DetailOT_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Employee_Cock", b =>
                {
                    b.Property<int>("Employee_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyIDCompany_CockID");

                    b.Property<int?>("DepartmentIDDepartment_CockID");

                    b.Property<int?>("EmployeeTypeIDEmployeeType_CockID");

                    b.Property<int>("Employee_Cock_CompanyID");

                    b.Property<int>("Employee_Cock_DepartmentNameID");

                    b.Property<int>("Employee_Cock_EmployeeTypeID");

                    b.Property<int>("Employee_Cock_LocationID");

                    b.Property<int>("Employee_Cock_PositionID");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int?>("LocationID1");

                    b.Property<int?>("PositionIDPosition_CockID");

                    b.HasKey("Employee_CockID");

                    b.HasIndex("CompanyIDCompany_CockID");

                    b.HasIndex("DepartmentIDDepartment_CockID");

                    b.HasIndex("EmployeeTypeIDEmployeeType_CockID");

                    b.HasIndex("LocationID1");

                    b.HasIndex("PositionIDPosition_CockID");

                    b.ToTable("Employee_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.EmployeeType_Cock", b =>
                {
                    b.Property<int>("EmployeeType_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeTypeName");

                    b.HasKey("EmployeeType_CockID");

                    b.ToTable("EmployeeType_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.FoodSet_Cock", b =>
                {
                    b.Property<int>("FoodSet_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Manu");

                    b.Property<string>("NameSet");

                    b.HasKey("FoodSet_CockID");

                    b.ToTable("FoodSet_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.JoinAssetEmp_Cock", b =>
                {
                    b.Property<int>("JoinAssetEmp_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetIDAsset_CockID");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<int>("JoinAssetEmp_Cock_AssetID");

                    b.Property<int>("JoinAssetEmp_Cock_EmployeeID");

                    b.Property<string>("Note");

                    b.Property<string>("Strint");

                    b.HasKey("JoinAssetEmp_CockID");

                    b.HasIndex("AssetIDAsset_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.ToTable("JoinAssetEmp_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.OT_Cock", b =>
                {
                    b.Property<int>("OT_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime>("TimeStart");

                    b.Property<string>("TypStatus");

                    b.Property<string>("TypeOT");

                    b.HasKey("OT_CockID");

                    b.ToTable("OT_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Part_Cock", b =>
                {
                    b.Property<int>("Part_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.HasKey("Part_CockID");

                    b.ToTable("Part_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Position_Cock", b =>
                {
                    b.Property<int>("Position_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionName");

                    b.HasKey("Position_CockID");

                    b.ToTable("Position_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Repair_Cock", b =>
                {
                    b.Property<int>("Repair_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetIDAsset_CockID");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<int>("Repair_Cock_AssetID");

                    b.Property<int>("Repair_Cock_EmployeeID");

                    b.Property<int>("Repair_Cock_ReportID");

                    b.Property<int?>("ReportIDReport_CockID");

                    b.Property<string>("Type");

                    b.HasKey("Repair_CockID");

                    b.HasIndex("AssetIDAsset_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.HasIndex("ReportIDReport_CockID");

                    b.ToTable("Repair_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Report_Cock", b =>
                {
                    b.Property<int>("Report_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetIDAsset_CockID");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<int>("Report_Cock_AssetID");

                    b.Property<int>("Report_Cock_EmployeeID");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.HasKey("Report_CockID");

                    b.HasIndex("AssetIDAsset_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.ToTable("Report_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Supplier_Cock", b =>
                {
                    b.Property<int>("Supplier_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SupplierName");

                    b.HasKey("Supplier_CockID");

                    b.ToTable("Supplier_Cock");
                });

            modelBuilder.Entity("tbkkData.Models.Asset", b =>
                {
                    b.Property<int>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetName");

                    b.Property<int>("Asset_CompanyID");

                    b.Property<int>("Asset_DepartmentID");

                    b.Property<int>("Asset_EmployeeID");

                    b.Property<int>("Asset_LocationID");

                    b.Property<int>("Asset_ModelID");

                    b.Property<int>("Asset_SupplierID");

                    b.Property<int?>("CompanyID1");

                    b.Property<int?>("DepartmentID1");

                    b.Property<int?>("EmployeeID1");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<string>("Image");

                    b.Property<DateTime>("InstallDate");

                    b.Property<int?>("LocationID1");

                    b.Property<string>("MACAddr");

                    b.Property<int?>("ModelID1");

                    b.Property<string>("Note");

                    b.Property<string>("PONumber");

                    b.Property<double>("Price");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("SerailNumber");

                    b.Property<string>("Status");

                    b.Property<int?>("SupplierID1");

                    b.Property<string>("Type");

                    b.Property<string>("Warranty");

                    b.HasKey("AssetID");

                    b.HasIndex("CompanyID1");

                    b.HasIndex("DepartmentID1");

                    b.HasIndex("EmployeeID1");

                    b.HasIndex("LocationID1");

                    b.HasIndex("ModelID1");

                    b.HasIndex("SupplierID1");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("tbkkData.Models.AssetJoinNetwork", b =>
                {
                    b.Property<int>("AssetJoinNetworkID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetID1");

                    b.Property<int>("AssetJoinNetwork_AssetID");

                    b.Property<int>("AssetJoinNetwork_NetworkID");

                    b.Property<int?>("NetworkID1");

                    b.Property<string>("Note");

                    b.Property<string>("Status");

                    b.HasKey("AssetJoinNetworkID");

                    b.HasIndex("AssetID1");

                    b.HasIndex("NetworkID1");

                    b.ToTable("AssetJoinNetworks");
                });

            modelBuilder.Entity("tbkkData.Models.Brand", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName");

                    b.Property<string>("Image");

                    b.HasKey("BrandID");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("tbkkData.Models.Canteen", b =>
                {
                    b.Property<int>("CanteenID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Call");

                    b.Property<string>("Email");

                    b.Property<string>("Line");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.HasKey("CanteenID");

                    b.ToTable("Canteen");
                });

            modelBuilder.Entity("tbkkData.Models.CarType", b =>
                {
                    b.Property<int>("CarTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarType_CompanyCarID");

                    b.Property<int?>("CompanyCarID1");

                    b.Property<string>("NameCar");

                    b.Property<string>("Seat");

                    b.HasKey("CarTypeID");

                    b.HasIndex("CompanyCarID1");

                    b.ToTable("CarType");
                });

            modelBuilder.Entity("tbkkData.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<string>("Image");

                    b.Property<string>("TypeName");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("tbkkData.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<string>("Image");

                    b.Property<string>("Status");

                    b.HasKey("CompanyID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("tbkkData.Models.CompanyCar", b =>
                {
                    b.Property<int>("CompanyCarID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Call");

                    b.Property<string>("Line");

                    b.Property<string>("NameCompanyCar");

                    b.Property<string>("Seat");

                    b.Property<string>("Status");

                    b.HasKey("CompanyCarID");

                    b.ToTable("CompanyCar");
                });

            modelBuilder.Entity("tbkkData.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName");

                    b.Property<string>("Image");

                    b.Property<string>("Status");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("tbkkData.Models.DetailOT", b =>
                {
                    b.Property<int>("DetailOTID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarNumber");

                    b.Property<int?>("CarTypeID1");

                    b.Property<int>("CarType_CarTypeID");

                    b.Property<int?>("EmployeeID1");

                    b.Property<int>("Employee_EmpID");

                    b.Property<int?>("FoodSetID1");

                    b.Property<int>("FoodSet_FoodSetID");

                    b.Property<double>("Hour");

                    b.Property<int?>("OTID1");

                    b.Property<int>("OT_OTID");

                    b.Property<int?>("PartID1");

                    b.Property<int>("Part_PaetID");

                    b.Property<string>("Status");

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime>("TimeStart");

                    b.Property<string>("Type");

                    b.HasKey("DetailOTID");

                    b.HasIndex("CarTypeID1");

                    b.HasIndex("EmployeeID1");

                    b.HasIndex("FoodSetID1");

                    b.HasIndex("OTID1");

                    b.HasIndex("PartID1");

                    b.ToTable("DetailOT");
                });

            modelBuilder.Entity("tbkkData.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addr");

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Call");

                    b.Property<int?>("CompanyID1");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("DepartmentID1");

                    b.Property<string>("Email");

                    b.Property<int?>("EmployeeTypeID1");

                    b.Property<int>("Employee_CompanyID");

                    b.Property<int>("Employee_DepartmentNameID");

                    b.Property<int>("Employee_EmployeeTypeID");

                    b.Property<int>("Employee_LocationID");

                    b.Property<int>("Employee_PositionID");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("Image");

                    b.Property<string>("LastName");

                    b.Property<string>("Line");

                    b.Property<int?>("LocationID1");

                    b.Property<int?>("PositionID1");

                    b.Property<string>("Status");

                    b.HasKey("EmployeeID");

                    b.HasIndex("CompanyID1");

                    b.HasIndex("DepartmentID1");

                    b.HasIndex("EmployeeTypeID1");

                    b.HasIndex("LocationID1");

                    b.HasIndex("PositionID1");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("tbkkData.Models.EmployeeType", b =>
                {
                    b.Property<int>("EmployeeTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeTypeName");

                    b.HasKey("EmployeeTypeID");

                    b.ToTable("EmployeeType");
                });

            modelBuilder.Entity("tbkkData.Models.Evaluation", b =>
                {
                    b.Property<int>("EvaluationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeID1");

                    b.Property<DateTime>("EvaDate");

                    b.Property<string>("EvaDetail");

                    b.Property<int>("EvaStatus");

                    b.Property<int>("EvaSumPoint");

                    b.Property<int>("Eva_EmployeeID");

                    b.Property<int>("Eva_GradeHistoryID");

                    b.Property<string>("Evatype");

                    b.Property<int?>("GradeHistoryID1");

                    b.HasKey("EvaluationID");

                    b.HasIndex("EmployeeID1");

                    b.HasIndex("GradeHistoryID1");

                    b.ToTable("Evaluation");
                });

            modelBuilder.Entity("tbkkData.Models.FoodSet", b =>
                {
                    b.Property<int>("FoodSetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CanteenID1");

                    b.Property<int>("Canteen_CanteenID");

                    b.Property<string>("FoodSetcoManul");

                    b.Property<string>("NameSet");

                    b.HasKey("FoodSetID");

                    b.HasIndex("CanteenID1");

                    b.ToTable("FoodSet");
                });

            modelBuilder.Entity("tbkkData.Models.GradeHistory", b =>
                {
                    b.Property<int>("GradeHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count");

                    b.Property<int?>("EmployeeID1");

                    b.Property<int>("GradeHistory_EmployeeID");

                    b.Property<int>("GrahAllPoint");

                    b.Property<int>("GrahBonusUp");

                    b.Property<int>("GrahRound1");

                    b.Property<int>("GrahRound2");

                    b.Property<int>("GrahRound3");

                    b.Property<int>("GrahSalaryUp");

                    b.Property<string>("GrahYear");

                    b.HasKey("GradeHistoryID");

                    b.HasIndex("EmployeeID1");

                    b.ToTable("GradeHistory");
                });

            modelBuilder.Entity("tbkkData.Models.GradeHistory_Cock", b =>
                {
                    b.Property<int>("GradeHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count");

                    b.Property<int?>("EmployeeID1");

                    b.Property<int>("GradeHistory_EmployeeID");

                    b.Property<int>("GrahAllPoint");

                    b.Property<int>("GrahBonusUp");

                    b.Property<int>("GrahRound1");

                    b.Property<int>("GrahRound2");

                    b.Property<int>("GrahRound3");

                    b.Property<int>("GrahSalaryUp");

                    b.Property<string>("GrahYear");

                    b.HasKey("GradeHistoryID");

                    b.HasIndex("EmployeeID1");

                    b.ToTable("GradeHistory_Cock");
                });

            modelBuilder.Entity("tbkkData.Models.JoinAssetEmp", b =>
                {
                    b.Property<int>("JoinAssetEmpID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetID1");

                    b.Property<int?>("EmployeeID1");

                    b.Property<int>("JoinAssetEmp_AssetID");

                    b.Property<int>("JoinAssetEmp_EmployeeID");

                    b.Property<string>("Note");

                    b.Property<string>("Status");

                    b.HasKey("JoinAssetEmpID");

                    b.HasIndex("AssetID1");

                    b.HasIndex("EmployeeID1");

                    b.ToTable("JoinAssetEmp");
                });

            modelBuilder.Entity("tbkkData.Models.JoinLicenseAsset", b =>
                {
                    b.Property<int>("JoinLicenseAssetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetID1");

                    b.Property<int>("JoinLicenseAsset_AssetID");

                    b.Property<int>("JoinLicenseAsset_License");

                    b.Property<int?>("LicenseID1");

                    b.Property<string>("Status");

                    b.HasKey("JoinLicenseAssetID");

                    b.HasIndex("AssetID1");

                    b.HasIndex("LicenseID1");

                    b.ToTable("JoinLicenseAsset");
                });

            modelBuilder.Entity("tbkkData.Models.License", b =>
                {
                    b.Property<int>("LicenseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachfiles");

                    b.Property<int?>("CompanyID1");

                    b.Property<int?>("DepartmentID1");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<string>("LicenseName");

                    b.Property<int>("License_CompanyID");

                    b.Property<int>("License_DepartmentID");

                    b.Property<int>("License_ModelID");

                    b.Property<int>("License_SupplierID");

                    b.Property<int?>("ModelID1");

                    b.Property<string>("Note");

                    b.Property<string>("PONumber");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("SoftewareName");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status");

                    b.Property<int?>("SupplierID1");

                    b.HasKey("LicenseID");

                    b.HasIndex("CompanyID1");

                    b.HasIndex("DepartmentID1");

                    b.HasIndex("ModelID1");

                    b.HasIndex("SupplierID1");

                    b.ToTable("License");
                });

            modelBuilder.Entity("tbkkData.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationName");

                    b.Property<string>("Note");

                    b.HasKey("LocationID");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("tbkkData.Models.Login", b =>
                {
                    b.Property<int>("LoginID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Login_EmployeeID");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("LoginID");

                    b.HasIndex("Login_EmployeeID");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("tbkkData.Models.Model", b =>
                {
                    b.Property<int>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandID1");

                    b.Property<int?>("CategoryID1");

                    b.Property<string>("ModelName");

                    b.Property<int>("Model_BrandID");

                    b.Property<int>("Model_CategoryID");

                    b.HasKey("ModelID");

                    b.HasIndex("BrandID1");

                    b.HasIndex("CategoryID1");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("tbkkData.Models.Network", b =>
                {
                    b.Property<int>("NetworkID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IpAddr");

                    b.Property<string>("NetworkName");

                    b.Property<string>("Note");

                    b.Property<string>("Password");

                    b.HasKey("NetworkID");

                    b.ToTable("Network");
                });

            modelBuilder.Entity("tbkkData.Models.OT", b =>
                {
                    b.Property<int>("OTID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime>("TimeStart");

                    b.Property<string>("TypStatus");

                    b.Property<string>("TypeOT");

                    b.HasKey("OTID");

                    b.ToTable("OT");
                });

            modelBuilder.Entity("tbkkData.Models.Part", b =>
                {
                    b.Property<int>("PartID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Price");

                    b.HasKey("PartID");

                    b.ToTable("Part");
                });

            modelBuilder.Entity("tbkkData.Models.Point", b =>
                {
                    b.Property<int>("PointID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePoint");

                    b.Property<int?>("PartID1");

                    b.Property<int>("Point_PartID");

                    b.HasKey("PointID");

                    b.HasIndex("PartID1");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("tbkkData.Models.Position", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionName");

                    b.HasKey("PositionID");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("tbkkData.Models.Relationship", b =>
                {
                    b.Property<int>("RelationshipID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetIDmomAssetID");

                    b.Property<int?>("AssetIDsonAssetID");

                    b.Property<int>("Relationship_AssetIDmom");

                    b.Property<int>("Relationship_AssetIDson");

                    b.Property<string>("Status");

                    b.HasKey("RelationshipID");

                    b.HasIndex("AssetIDmomAssetID");

                    b.HasIndex("AssetIDsonAssetID");

                    b.ToTable("Relationship");
                });

            modelBuilder.Entity("tbkkData.Models.Repair", b =>
                {
                    b.Property<int>("RepairID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetID1");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeID1");

                    b.Property<string>("Note");

                    b.Property<int>("Repair_AssetID");

                    b.Property<int>("Repair_EmployeeID");

                    b.Property<int>("Repair_ReportID");

                    b.Property<int?>("ReportID1");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.HasKey("RepairID");

                    b.HasIndex("AssetID1");

                    b.HasIndex("EmployeeID1");

                    b.HasIndex("ReportID1");

                    b.ToTable("Repair");
                });

            modelBuilder.Entity("tbkkData.Models.Report", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetID1");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeID1");

                    b.Property<string>("Note");

                    b.Property<int>("Report_AssetID");

                    b.Property<int>("Report_EmployeeID");

                    b.Property<string>("Status");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.HasKey("ReportID");

                    b.HasIndex("AssetID1");

                    b.HasIndex("EmployeeID1");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("tbkkData.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ContactName");

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<string>("Note");

                    b.Property<string>("SupplierName");

                    b.Property<string>("URL");

                    b.HasKey("SupplierID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateAsset", b =>
                {
                    b.Property<int>("UpdateAssetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetID1");

                    b.Property<string>("AssetName");

                    b.Property<int?>("CompanyID1");

                    b.Property<int?>("EmployeeID1");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<string>("Image");

                    b.Property<DateTime>("InstallDate");

                    b.Property<int?>("LocationID1");

                    b.Property<string>("MACAddr");

                    b.Property<int?>("ModelID1");

                    b.Property<string>("Note");

                    b.Property<string>("PONumber");

                    b.Property<double>("Price");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<int?>("SepartmentIDDepartmentID");

                    b.Property<string>("SerailNumber");

                    b.Property<string>("Status");

                    b.Property<int?>("SupplierID1");

                    b.Property<string>("Type");

                    b.Property<int>("UpdateAsset_AssetID");

                    b.Property<int>("UpdateAsset_CompanyID");

                    b.Property<int>("UpdateAsset_EmployeeID");

                    b.Property<int>("UpdateAsset_LocationID");

                    b.Property<int>("UpdateAsset_ModelID");

                    b.Property<int>("UpdateAsset_SepartmentID");

                    b.Property<int>("UpdateAsset_SupplierID");

                    b.Property<int>("Warranty");

                    b.HasKey("UpdateAssetID");

                    b.HasIndex("AssetID1");

                    b.HasIndex("CompanyID1");

                    b.HasIndex("EmployeeID1");

                    b.HasIndex("LocationID1");

                    b.HasIndex("ModelID1");

                    b.HasIndex("SepartmentIDDepartmentID");

                    b.HasIndex("SupplierID1");

                    b.ToTable("UpdateAsset");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateLicense", b =>
                {
                    b.Property<int>("UpdateLicenseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachfiles");

                    b.Property<int?>("CompanyID1");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("DepartmentID1");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<int?>("LicenseID1");

                    b.Property<string>("LicenseName");

                    b.Property<int?>("ModelID1");

                    b.Property<string>("Note");

                    b.Property<string>("PONumber");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("SoftwareName");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.Property<int?>("SupplierID1");

                    b.Property<int>("UpdateLicense_CompanyID");

                    b.Property<int>("UpdateLicense_DepartmentID");

                    b.Property<int>("UpdateLicense_LicenseID");

                    b.Property<int>("UpdateLicense_ModelID");

                    b.Property<int>("UpdateLicense_SupplierID");

                    b.HasKey("UpdateLicenseID");

                    b.HasIndex("CompanyID1");

                    b.HasIndex("DepartmentID1");

                    b.HasIndex("LicenseID1");

                    b.HasIndex("ModelID1");

                    b.HasIndex("SupplierID1");

                    b.ToTable("UpdateLicense");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateNetwork", b =>
                {
                    b.Property<int>("UpdateNetworkID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeID1");

                    b.Property<string>("IpAddr");

                    b.Property<int?>("NetworkID1");

                    b.Property<string>("Note");

                    b.Property<string>("Password");

                    b.Property<int>("UpdateNetwork_EmployeeID");

                    b.Property<int>("UpdateNetwork_NetworkID");

                    b.HasKey("UpdateNetworkID");

                    b.HasIndex("EmployeeID1");

                    b.HasIndex("NetworkID1");

                    b.ToTable("UpdateNetwork");
                });

            modelBuilder.Entity("tbkkData.Model.Asset_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Company_Cock", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyIDCompany_CockID");

                    b.HasOne("tbkkData.Model.Department_Cock", "DepartmentID")
                        .WithMany()
                        .HasForeignKey("DepartmentIDDepartment_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");

                    b.HasOne("tbkkData.Model.Supplier_Cock", "SupplierID")
                        .WithMany()
                        .HasForeignKey("SupplierIDSupplier_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.DetailOT_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.CarType_Cock", "CarTypeID")
                        .WithMany()
                        .HasForeignKey("CarTypeIDCarType_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");

                    b.HasOne("tbkkData.Model.FoodSet_Cock", "FoodSetID")
                        .WithMany()
                        .HasForeignKey("FoodSetIDFoodSet_CockID");

                    b.HasOne("tbkkData.Model.OT_Cock", "OTID")
                        .WithMany()
                        .HasForeignKey("OTIDOT_CockID");

                    b.HasOne("tbkkData.Model.Part_Cock", "PartID")
                        .WithMany()
                        .HasForeignKey("PartIDPart_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.Employee_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Company_Cock", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyIDCompany_CockID");

                    b.HasOne("tbkkData.Model.Department_Cock", "DepartmentID")
                        .WithMany()
                        .HasForeignKey("DepartmentIDDepartment_CockID");

                    b.HasOne("tbkkData.Model.EmployeeType_Cock", "EmployeeTypeID")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeIDEmployeeType_CockID");

                    b.HasOne("tbkkData.Models.Location", "LocationID")
                        .WithMany()
                        .HasForeignKey("LocationID1");

                    b.HasOne("tbkkData.Model.Position_Cock", "PositionID")
                        .WithMany()
                        .HasForeignKey("PositionIDPosition_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.JoinAssetEmp_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Asset_Cock", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetIDAsset_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.Repair_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Asset_Cock", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetIDAsset_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");

                    b.HasOne("tbkkData.Model.Report_Cock", "ReportID")
                        .WithMany()
                        .HasForeignKey("ReportIDReport_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.Report_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Asset_Cock", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetIDAsset_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");
                });

            modelBuilder.Entity("tbkkData.Models.Asset", b =>
                {
                    b.HasOne("tbkkData.Models.Company", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyID1");

                    b.HasOne("tbkkData.Models.Department", "DepartmentID")
                        .WithMany()
                        .HasForeignKey("DepartmentID1");

                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");

                    b.HasOne("tbkkData.Models.Location", "LocationID")
                        .WithMany()
                        .HasForeignKey("LocationID1");

                    b.HasOne("tbkkData.Models.Model", "ModelID")
                        .WithMany()
                        .HasForeignKey("ModelID1");

                    b.HasOne("tbkkData.Models.Supplier", "SupplierID")
                        .WithMany()
                        .HasForeignKey("SupplierID1");
                });

            modelBuilder.Entity("tbkkData.Models.AssetJoinNetwork", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetID1");

                    b.HasOne("tbkkData.Models.Network", "NetworkID")
                        .WithMany()
                        .HasForeignKey("NetworkID1");
                });

            modelBuilder.Entity("tbkkData.Models.CarType", b =>
                {
                    b.HasOne("tbkkData.Models.CompanyCar", "CompanyCarID")
                        .WithMany()
                        .HasForeignKey("CompanyCarID1");
                });

            modelBuilder.Entity("tbkkData.Models.DetailOT", b =>
                {
                    b.HasOne("tbkkData.Models.CarType", "CarTypeID")
                        .WithMany()
                        .HasForeignKey("CarTypeID1");

                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");

                    b.HasOne("tbkkData.Models.FoodSet", "FoodSetID")
                        .WithMany()
                        .HasForeignKey("FoodSetID1");

                    b.HasOne("tbkkData.Models.OT", "OTID")
                        .WithMany()
                        .HasForeignKey("OTID1");

                    b.HasOne("tbkkData.Models.Part", "PartID")
                        .WithMany()
                        .HasForeignKey("PartID1");
                });

            modelBuilder.Entity("tbkkData.Models.Employee", b =>
                {
                    b.HasOne("tbkkData.Models.Company", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyID1");

                    b.HasOne("tbkkData.Models.Department", "DepartmentID")
                        .WithMany()
                        .HasForeignKey("DepartmentID1");

                    b.HasOne("tbkkData.Models.EmployeeType", "EmployeeTypeID")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeID1");

                    b.HasOne("tbkkData.Models.Location", "LocationID")
                        .WithMany()
                        .HasForeignKey("LocationID1");

                    b.HasOne("tbkkData.Models.Position", "PositionID")
                        .WithMany()
                        .HasForeignKey("PositionID1");
                });

            modelBuilder.Entity("tbkkData.Models.Evaluation", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");

                    b.HasOne("tbkkData.Models.GradeHistory", "GradeHistoryID")
                        .WithMany()
                        .HasForeignKey("GradeHistoryID1");
                });

            modelBuilder.Entity("tbkkData.Models.FoodSet", b =>
                {
                    b.HasOne("tbkkData.Models.Canteen", "CanteenID")
                        .WithMany()
                        .HasForeignKey("CanteenID1");
                });

            modelBuilder.Entity("tbkkData.Models.GradeHistory", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");
                });

            modelBuilder.Entity("tbkkData.Models.GradeHistory_Cock", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");
                });

            modelBuilder.Entity("tbkkData.Models.JoinAssetEmp", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetID1");

                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");
                });

            modelBuilder.Entity("tbkkData.Models.JoinLicenseAsset", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetID1");

                    b.HasOne("tbkkData.Models.License", "LicenseID")
                        .WithMany()
                        .HasForeignKey("LicenseID1");
                });

            modelBuilder.Entity("tbkkData.Models.License", b =>
                {
                    b.HasOne("tbkkData.Models.Company", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyID1");

                    b.HasOne("tbkkData.Models.Department", "DepartmentID")
                        .WithMany()
                        .HasForeignKey("DepartmentID1");

                    b.HasOne("tbkkData.Models.Model", "ModelID")
                        .WithMany()
                        .HasForeignKey("ModelID1");

                    b.HasOne("tbkkData.Models.Supplier", "SupplierID")
                        .WithMany()
                        .HasForeignKey("SupplierID1");
                });

            modelBuilder.Entity("tbkkData.Models.Login", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("Login_EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Model", b =>
                {
                    b.HasOne("tbkkData.Models.Brand", "BrandID")
                        .WithMany()
                        .HasForeignKey("BrandID1");

                    b.HasOne("tbkkData.Models.Category", "CategoryID")
                        .WithMany()
                        .HasForeignKey("CategoryID1");
                });

            modelBuilder.Entity("tbkkData.Models.Point", b =>
                {
                    b.HasOne("tbkkData.Models.Part", "PartID")
                        .WithMany()
                        .HasForeignKey("PartID1");
                });

            modelBuilder.Entity("tbkkData.Models.Relationship", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "AssetIDmom")
                        .WithMany()
                        .HasForeignKey("AssetIDmomAssetID");

                    b.HasOne("tbkkData.Models.Asset", "AssetIDson")
                        .WithMany()
                        .HasForeignKey("AssetIDsonAssetID");
                });

            modelBuilder.Entity("tbkkData.Models.Repair", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetID1");

                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");

                    b.HasOne("tbkkData.Models.Report", "ReportID")
                        .WithMany()
                        .HasForeignKey("ReportID1");
                });

            modelBuilder.Entity("tbkkData.Models.Report", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetID1");

                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateAsset", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetID1");

                    b.HasOne("tbkkData.Models.Company", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyID1");

                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");

                    b.HasOne("tbkkData.Models.Location", "LocationID")
                        .WithMany()
                        .HasForeignKey("LocationID1");

                    b.HasOne("tbkkData.Models.Model", "ModelID")
                        .WithMany()
                        .HasForeignKey("ModelID1");

                    b.HasOne("tbkkData.Models.Department", "SepartmentID")
                        .WithMany()
                        .HasForeignKey("SepartmentIDDepartmentID");

                    b.HasOne("tbkkData.Models.Supplier", "SupplierID")
                        .WithMany()
                        .HasForeignKey("SupplierID1");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateLicense", b =>
                {
                    b.HasOne("tbkkData.Models.Company", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyID1");

                    b.HasOne("tbkkData.Models.Department", "DepartmentID")
                        .WithMany()
                        .HasForeignKey("DepartmentID1");

                    b.HasOne("tbkkData.Models.License", "LicenseID")
                        .WithMany()
                        .HasForeignKey("LicenseID1");

                    b.HasOne("tbkkData.Models.Model", "ModelID")
                        .WithMany()
                        .HasForeignKey("ModelID1");

                    b.HasOne("tbkkData.Models.Supplier", "SupplierID")
                        .WithMany()
                        .HasForeignKey("SupplierID1");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateNetwork", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");

                    b.HasOne("tbkkData.Models.Network", "NetworkID")
                        .WithMany()
                        .HasForeignKey("NetworkID1");
                });
#pragma warning restore 612, 618
        }
    }
}
